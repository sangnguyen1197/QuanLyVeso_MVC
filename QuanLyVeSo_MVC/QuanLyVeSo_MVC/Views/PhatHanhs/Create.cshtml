@model QuanLyVeSo_MVC.DTO.PhatHanh

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Thêm đợt phát hành mới</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4></h4>
    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.MaDaiLy, "Tên đại lý", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaDaiLy", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaDaiLy, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaLoaiVeSo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaLoaiVeSo", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaLoaiVeSo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NgayNhan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NgayNhan, new { htmlAttributes = new { @class = "form-control", @type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.NgayNhan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SLBan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SLBan, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.SLBan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DoanhThuDPH, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DoanhThuDPH, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "Tự động tính" } })
            @Html.ValidationMessageFor(model => model.DoanhThuDPH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HoaHong, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.HoaHong, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.HoaHong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TienThanhToan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TienThanhToan, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "Tự động tính" } })
            @Html.ValidationMessageFor(model => model.TienThanhToan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Thêm" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Trở về danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
